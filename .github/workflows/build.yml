name: Build

on:
  workflow_dispatch:
      inputs:
        os:
          description: 'The operating system to use when triggering the job'
          required: false
          default: 'ubuntu-18.04'
        phpVersion:
          description: 'The php version to use when triggering the job'
          required: false
          default: '8.1'
  pull_request:
    branches:
      - 'main'

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04, ubuntu-22.04 ]
        php: [ 5.6, 8.1, 8.2 ]
        exclude:
          - os: ubuntu-18.04
            php: 8.1
          - os: ubuntu-18.04
            php: 8.2
          - os: ubuntu-22.04
            php: 5.6

    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up PHP
        run: |
          sudo apt-get update
          sudo apt-get purge -y php*
          sudo add-apt-repository -y ppa:ondrej/php
          sudo apt-get install php${{ matrix.php }} php${{ matrix.php }}-dev -y
          sudo update-alternatives --set php /usr/bin/php${{ matrix.php }}
          sudo update-alternatives --set phar /usr/bin/phar${{ matrix.php }}
          sudo update-alternatives --set phar.phar /usr/bin/phar.phar${{ matrix.php }}
          sudo update-alternatives --set php-config /usr/bin/php-config${{ matrix.php }}
          php -v
          php-config --version

      - uses: actions/checkout@v4
        with:
          path: main

      - name: Build Swig v4
        if: matrix.php != '5.6'
        run: |
          sudo apt install libpcre2-dev
          git clone https://github.com/swig/swig.git
          cd swig
          mkdir Build
          cd Build
          cmake ..
          make
          sudo make install
          swig -version
          /usr/local/bin/swig -version

      - name: Build Swig v2
        if: matrix.php == '5.6'
        run: |
          sudo apt-get install automake build-essential libtool libpcre3-dev libpcre3 bison flex yodl
          mkdir swig
          wget -q https://github.com/swig/swig/archive/refs/tags/v2.0.12.tar.gz
          tar xzf v2.0.12.tar.gz
          cd swig-2.0.12
          ./autogen.sh
          ./configure
          make
          sudo make install
          swig -version
          /usr/local/bin/swig -version

      - name: Clone PDFTron
        run: |
          mkdir wrappers_build # Make a directory to build the wrappers in.
          cd wrappers_build # Move to that directory.
          git clone https://github.com/PDFTron/PDFNetWrappers # Git the code.

      - name: CMake
        run: |
          rsync -avhW main/build.py wrappers_build/PDFNetWrappers/build.py
          cd wrappers_build/PDFNetWrappers/ 
          python3 build.py --custom_swig=/usr/local/bin/swig --wrapper=PDFNetPHP

      - name: Make
        run: |
          cd wrappers_build/PDFNetWrappers/build/
          make

      - name: Prepare git and commit
        run: |
          mkdir -p main/${{ matrix.os }}/php-${{ matrix.php }}
          cp wrappers_build/PDFNetWrappers/build/lib/* main/${{ matrix.os }}/php-${{ matrix.php }}/
          cp wrappers_build/PDFNetWrappers/PDFNetC/Lib/libPDFNetC.so main/${{ matrix.os }}/php-${{ matrix.php }}/
          
          cd main/
          
          git pull
                   
          git add .

          git config --local user.email "gha@uniques.ca"
          git config --local user.name "GitHub Actions"

          git diff-index --quiet HEAD || (git commit -a -m "Automatic commit by GitHub Actions: #${GITHUB_SHA}" && git push)

      - name: See compiled files
        if: always()
        run: |
          ls -al wrappers_build/PDFNetWrappers/
          ls -al wrappers_build/PDFNetWrappers/build/
          ls -al wrappers_build/PDFNetWrappers/build/lib/
          ls -al wrappers_build/PDFNetWrappers/build/PDFNetPHP/
          ls -al wrappers_build/PDFNetWrappers/PDFNetC/
          ls -al wrappers_build/PDFNetWrappers/PDFNetC/Lib/
